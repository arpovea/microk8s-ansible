---
- name: Check if MicroK8s is installed
  ansible.builtin.command: /snap/bin/microk8s status --wait-ready
  register: microk8s_status
  failed_when: false
  changed_when: false
  become: true

- name: Create the configuration directory
  ansible.builtin.file:
    path: /var/snap/microk8s/common
    state: directory
    mode: '0755'
  become: true
  when: microk8s_status.rc != 0

- name: Copy the launch configuration file
  ansible.builtin.template:
    src: microk8s-config.yaml.j2
    dest: /var/snap/microk8s/common/.microk8s.yaml
    mode: '0644'
  become: true
  when: microk8s_status.rc != 0

- name: Ensure snapd is running
  ansible.builtin.systemd:
    name: snapd
    state: started
  become: true
  when: microk8s_status.rc != 0

- name: Install MicroK8s
  community.general.snap:
    name: microk8s
    classic: true
    state: present
    channel: "{{ initial_setup_microk8s_version }}"
  become: true
  when: microk8s_status.rc != 0

- name: Hold Snap packages to prevent automatic updates
  ansible.builtin.command: snap refresh --hold microk8s
  register: hold_snap_packages
  changed_when: hold_snap_packages.rc != 0
  become: true
  when: microk8s_status.rc != 0

- name: Wait for MicroK8s to be ready
  ansible.builtin.command: "/snap/bin/microk8s status --wait-ready"
  retries: 10
  delay: 10
  register: microk8s_ready
  changed_when: false
  until: microk8s_ready.rc == 0
  become: true

- name: Add user to microk8s group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: microk8s
    append: true
  become: true

- name: Reload user groups
  ansible.builtin.shell: "newgrp microk8s && sg microk8s"
  become: true
  become_user: "{{ ansible_user }}"

- name: Create kubectl alias
  ansible.builtin.command: "snap alias microk8s.kubectl kubectl"
  changed_when: false
  register: aliaskubectlout
  become: true

- name: Ensure .bashrc includes kubectl alias
  ansible.builtin.lineinfile:
    path: /home/{{ ansible_user }}/.bashrc
    create: true
    line: 'alias k="kubectl"'
    mode: '0644'
  become: true
  become_user: "{{ ansible_user }}"

- name: Source .bashrc to apply alias
  ansible.builtin.shell: source /home/{{ ansible_user }}/.bashrc
  register: source_bashrc
  changed_when: source_bashrc != 0
  become: true
  become_user: "{{ ansible_user }}"
  args:
    executable: /bin/bash

- name: Create .kube directory if it does not exist for the user non-root
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    mode: '0755'
  become: true

- name: Create .kube directory if it does not exist for the user root
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    mode: '0755'
  become: true

- name: Generate kubeconfig for MicroK8s for the user non-root
  ansible.builtin.shell: /snap/bin/microk8s config > /home/{{ ansible_user }}/.kube/config
  register: generate_kubeconfig
  changed_when: generate_kubeconfig.rc != 0
  become: true
  become_user: "{{ ansible_user }}"

- name: Generate kubeconfig for MicroK8s for the user root
  ansible.builtin.shell: /snap/bin/microk8s config > {{ ansible_env.HOME }}/.kube/config
  register: generate_kubeconfig
  changed_when: generate_kubeconfig.rc != 0
  become: true

- name: Ensure .kube directory ownership and permissions for the user non-root
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    recurse: true
  become: true

- name: Ensure .kube directory ownership and permissions for the user root
  ansible.builtin.file:
    path: "{{ ansible_env.HOME }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    recurse: true
  become: true

- name: Ensure kubeconfig file permissions for the user non-root
  ansible.builtin.file:
    path: "/home/{{ ansible_user }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  become: true

- name: Ensure kubeconfig file permissions for the user root
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/.kube/config
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: '0644'
  become: true
